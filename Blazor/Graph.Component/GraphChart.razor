@inject IJSRuntime JSRuntime

<div>
    <div>
        <span>
            Node count:
        </span>
        <button class="btn btn-primary" @onclick="NodeCountIncreaseChanged">+</button>
        <span>
            @NodeCount
        </span>
        <button class="btn btn-primary" @onclick="NodeCountDecreaseChanged">-</button>
        <span> Node count: @Probability</span>
    </div>

    <button class="btn btn-primary" @onclick="Render">Render</button>
    <div id="_containerId"></div>
</div>


@code {
    private string _containerId = "graphCointainerId";

    [Parameter] public int NodeCount { get; set; }

    [Parameter] public double Probability { get; set; }

    [Parameter] public EventCallback NodeCountIncreaseChanged { get; set; }

    [Parameter] public EventCallback NodeCountDecreaseChanged { get; set; }

    [Parameter] public GraphData GraphData { get; set; }

    [Parameter] public GraphOptions GraphOptions { get; set; }

    private async void Render()
    {
        await GraphChartJsInterop.CreateGraph(jsRuntime: JSRuntime, containerId: _containerId, data: GraphData, options: GraphOptions);
    }
}